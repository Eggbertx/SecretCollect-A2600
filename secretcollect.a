	processor 6502
	include "vcs.h"
	include "macro.h"
	include "consts.h"


	SEG.U Variables
	org $80

XPos .byte
YPos .byte


	SEG Code
	ORG $F000

Start
    CLEAN_START
	lda #80
	sta XPos
	sta YPos

FrameLoop
	lsr SWCHB ; test reset bit
	bcc Start
    VERTICAL_SYNC

	jsr MoveJoystick

	ldx #35
VBlankLoop
	sta WSYNC
	dex
	bne VBlankLoop

	; inc XPos
	; inc YPos
	lda XPos
	ldx #0

	jsr SetXPos
	sta WSYNC
	sta HMOVE

	ldx #192
ScanlineLoop
	txa
	sec
	sbc YPos
	cmp #SpriteHeight
	bcc SpriteLoop

	lda #0
SpriteLoop
	tay
	lda #$F0
	sta WSYNC
	sta GRP0
	cpy #0
ColorCOLUP0
	beq ZeroCOLUP0
	lda #SBColor
	jmp SetCOLUP0
ZeroCOLUP0
	lda #0
SetCOLUP0
	sta COLUP0
	dex
	bne ScanlineLoop
	

	ldx #29
OverscanLoop
	sta WSYNC
	dex
	bne OverscanLoop

	jmp FrameLoop


SetXPos
	sta WSYNC
	sec

DivideLoop
	sbc #15
	bcs DivideLoop; branch until negative
	eor #7
	asl
	asl
	asl
	asl
	sta RESP0,x
	sta HMP0,x
	rts

MoveJoystick
	ldx YPos
	lda #JOY_UP
	bit SWCHA
	bne SkipMoveUp
	cpx #2
	bcc SkipMoveUp
	dex

SkipMoveUp
	lda #JOY_DOWN
	bit SWCHA
	bne SkipMoveDown
	cpx #183
	bcs SkipMoveDown
	inx

SkipMoveDown
	stx YPos
	ldx XPos
	lda #JOY_LEFT
	bit SWCHA
	bne SkipMoveLeft
	cpx #16
	bcc SkipMoveLeft
	dex

SkipMoveLeft
	lda #JOY_RIGHT
	bit SWCHA 
	bne SkipMoveRight
	cpx #153
	bcs SkipMoveRight
	inx

SkipMoveRight
	stx XPos
	rts

	ORG $FFFC
	; .word Start ; NMI, FFFA with, FFFC without
	.word Start ; RESET
	.word Start ; IRQ
